---

title: Compilers PA2：Lexical Analysis
date: 2017-08-25T00:00:00.000Z
permalink: null

tags:
  - 编译原理
  - 学习笔记
  - 词法分析
  - flex
  - COOL语言
  
---

## 概述

Compilers的第一个实践作业是实现一个词法分析器的一部分，我们的任务是要根据文档写出恰当的正则表达式然后喂给flex，它就会将输入的程序按词法划分以便后面的语法处理。

语言可选c++或JAVA，对应flex或jlex

<!-- more -->

我选的是c++版本的flex

刚开始接触的时候是一头雾水，一下子给了个虚拟机和linux，再加上flex、cool的一些文档，还有老师写的一大堆辅助东西，但是大部分暂时还用不到。
跟着指示装好虚拟机，找到任务文件夹，里面的cool.flex是我们这次任务的目标，test.cl用于测试完成后的分析器，其它在README里给出了说明但不必管（对新手而言）。

有几份文档是必读的，并且重要部分需要读很多次以确保掌握了所有细节。
包括：
COOL 的文档：
> 从Page 15 到Figure 1 必读且多次读
> 给出了基本的词法规范，包括关键词(Keywords)有哪些、注释规范、空格类型等

flex或jlex的文档：
> 教怎么写flex或jlex用的正则表达式
> 会用到里面的一些基本的语法，不过一些深入的就暂时不必深究

任务文档：
> 必读、深读、重复读
> 重点在Part4、5，尤其是4的Error处理

tour文档：
> 给出string table、int table和add函数，看前几页就足够

都读完之后就可以开始写了，主要的目标就是处理注释和字符串，其它的处理较为简单，注释和字符串需要注意的细节很多（尤其字符串），包括\0、EOF等，这个时候文档里的细节就很重要，包括返回什么状态，需不需要立刻返回，error message是什么等，都在文档中有清晰说明。

写完之后就可以着手测试了，测试方法有两个，一个是用test.cl练手，还有一个是正式检测，不过正式检测是离线的，除了你自己没有人知道结果，并且最大的好处在于：可以无限次测试，每次测试都会给出错误的地方！（要是刷题也给出哪些数据错了就好了）

用test.cl
> 在文档里有说明，make lexer之后用./lexer test.cl 就可以看到输出了

正式检测：
> 从官方那下载.pl文件，或者复制文件内容到虚拟机里新建一个粘贴进去一样的。 用给出的perl命令就可以检测了，会给出分数（满分63），以及出错的文件名，之后就在任务文件夹里找到具体出错的文件自己找原因咯

感受：

非常累人！并且感觉难度和Quiz不是一个级别的，可能难点大多数在于对工具不熟悉+一大堆英文文档要读要掌握吧

最终成果： 
 ![mark](http://ot1c7ttzm.bkt.clouddn.com/image/170828/0BD2l2iD71.jpg?imageslim)
 